# Default user and group for the nginx@index
user ${WEB_USER} ${WEB_GROUP};

# Default error log
error_log ${NGINX_ERROR_LOG} ${NGINX_ERROR_LEVEL};

# Write process id here
pid /var/run/nginx.pid;

# Load custom environment variables
include env.conf;

# How many worker threads to run;
# "auto" sets it to the number of CPU cores available in the system, and
# offers the best performance. Don't set it higher than the number of CPU
# cores if changing this parameter.

# The maximum number of connections for Nginx is calculated by:
# max_clients = worker_processes * worker_connections
worker_processes auto;

# Maximum open file descriptors per process;
# should be > worker_connections.
worker_rlimit_nofile 8192;

events {
  # When you need > 8000 * cpu_cores connections, you start optimizing your OS,
  # and this is probably the point at which you hire people who are smarter than
  # you, as this is *a lot* of requests.
  worker_connections 8000;
}

http {
  
  # Configure hashmaps so that environment does not change defaults
  map_hash_max_size 262144;
  map_hash_bucket_size 262144;
  server_names_hash_bucket_size 64;
  
  # Hide nginx version information.
  server_tokens off;
	
  # Remove Server header entirely
  more_clear_headers Server;

  # How long to allow each connection to stay idle; longer values are better
  # for each individual client, particularly for SSL, but means that worker
  # connections are tied up longer. (Default: 65)
  keepalive_timeout 20;

  # Speed up file transfers by using sendfile() to copy directly
  # between descriptors rather than using read()/write().
  sendfile        on;

  # Tell Nginx not to send out partial frames; this increases throughput
  # since TCP frames are filled up before being sent out. (adds TCP_CORK)
  tcp_nopush      on;

  # Gzip all the assets
  include gzip.conf;

  # Add default pagespeed settings
  include pagespeed/settings.conf;

  # Add all default mime types 
  include    mime.types;

  default_type application/octet-stream;

  client_body_temp_path /tmp/nginx/body 1 2;
  fastcgi_temp_path /tmp/nginx/fastcgi_temp 1 2;

  # Include custom log formats
  include log_formats.conf;

  # Allow bigger default file uploads
  client_max_body_size ${NGINX_MAX_BODY_SIZE};

  # Allow bigger body buffer size in memory
  client_body_buffer_size ${NGINX_BODY_BUFFER_SIZE};

  # Include custom nginx http additions from project
  include ${NGINX_INCLUDE_DIR}/http/*.conf;
  include ${NGINX_INCLUDE_DIR}/environments/${WP_ENV}/http/*.conf;

  # load upstreams from one file which can be overwritten depending on situation
  include upstreams.conf;

  # If ${PORT} != 80 means that we are behind reverse proxy as well
  # This directive helps that we don't redirect clients into mysite.com:8080/resource type urls
  port_in_redirect off;

  # Use theme assets straight from corresponding files for pagespeed
  pagespeed ProcessScriptVariables on;
  pagespeed LoadFromFile "$scheme://$host/app/themes/" "${WEB_ROOT}/app/themes/";
  pagespeed LoadFromFile "$scheme://$host/wp-content/themes/" "${WEB_ROOT}/wp/wp-content/themes/";
    
  # Force resolving on runtime (lua-script)
  resolver local=on;
    
  server {
        # This is the default server for this container
        listen ${PORT} default_server;
        server_name _;

        root ${WEB_ROOT};

        # Use index.php if it exists but also allow static websites in subfolders
        index index.php index.html;

        # Blocked log file
        set $blocked_log /dev/stdout;

        disable_symlinks off;

        # Include custom nginx server additions and locations! 
        # Use conf to include logging and caching!
        # see Sample_locations.conf
        include ${NGINX_INCLUDE_DIR}/server/*.conf;
        include ${NGINX_INCLUDE_DIR}/environments/${WP_ENV}/server/*.conf;

        # These variables are proxy conscious, so that they work even though we are behind reverse proxy
        include proxy_real_variables.conf;

        # Include custom error pages
        include error_pages.conf;

        # Block some vulnerabilities always
        include security.conf;

        # Include basic pagespeed locations like beacons
        include pagespeed/locations.conf;
    }
    include ${NGINX_INCLUDE_DIR}/environments/${WP_ENV}/end/*.conf;
}
