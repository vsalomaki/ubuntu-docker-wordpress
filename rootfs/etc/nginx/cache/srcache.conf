##
# Add few rules which deny using cache
##

include cache/skip_rules.conf;
include cache/helper_variables.conf;

# Use redis caching for all pages
# Allow different cache key from env
# Use 'wp_' prefix so that cache can be flushed with:
# $ wp cache flush
set $cache_key "${NGINX_CACHE_KEY}$real_scheme$request_method$host$request_uri$accepted_cache_args";
set_escape_uri $escaped_key $cache_key;

srcache_response_cache_control on;
srcache_store_statuses 200 301 302; #default

srcache_fetch GET /redis-fetch key=$escaped_key;
srcache_store PUT /redis-store key=$escaped_key;

# Add header for easier cache debugging
add_header X-Cache $srcache_fetch_status;
#more_set_headers 'X-Cache-Fetch-Status $srcache_fetch_status';
#more_set_headers 'X-Cache-Store-Status $srcache_store_status';

header_filter_by_lua_block {
    local srcache_fetch_status = ngx.var.srcache_fetch_status
    local cache = ${NGINX_CACHE_CONTROL}
    local nocache = ${NGINX_CACHE_CONTROL_NOCACHE}

    if srcache_fetch_status == 'BYPASS' then
        ngx.header.Cache_Control = nocache
    else
        ngx.header.Cache_Control = cache
    end
}
